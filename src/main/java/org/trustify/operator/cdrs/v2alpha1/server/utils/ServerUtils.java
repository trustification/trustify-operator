package org.trustify.operator.cdrs.v2alpha1.server.utils;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;
import org.trustify.operator.cdrs.v2alpha1.Trustify;
import org.trustify.operator.cdrs.v2alpha1.TrustifySpec;
import org.trustify.operator.services.ClusterService;
import org.trustify.operator.utils.CRDUtils;

import java.util.Optional;

@ApplicationScoped
public class ServerUtils {

    @Inject
    ClusterService clusterService;

    public static boolean isServerDBRequired(Trustify cr) {
        return !Optional.ofNullable(cr.getSpec().databaseSpec())
                .map(TrustifySpec.DatabaseSpec::externalDatabase)
                .orElse(false);
    }

    public Optional<String> tlsSecretName(Trustify cr) {
        Optional<String> userDefinedTlsSecretName = CRDUtils.getValueFromSubSpec(cr.getSpec().httpSpec(), TrustifySpec.HttpSpec::tlsSecret);
        if (userDefinedTlsSecretName.isPresent()) {
            return userDefinedTlsSecretName;
        }

        return clusterService.getCluster().getAutoGeneratedServerTlsSecret(cr)
                .map(secret -> secret.getMetadata().getName());
    }
}
