package org.trustify.operator.cdrs.v2alpha1.server.service;

import io.fabric8.kubernetes.api.model.PersistentVolumeClaim;
import io.javaoperatorsdk.operator.api.reconciler.Context;
import io.javaoperatorsdk.operator.api.reconciler.dependent.DependentResource;
import io.javaoperatorsdk.operator.processing.dependent.workflow.Condition;
import org.trustify.operator.Constants;
import org.trustify.operator.cdrs.v2alpha1.Trustify;
import org.trustify.operator.services.Cluster;
import org.trustify.operator.services.ClusterService;
import org.trustify.operator.services.OpenshiftCluster;

public class ServerServiceReadyPostCondition implements Condition<PersistentVolumeClaim, Trustify> {

    @Override
    public boolean isMet(DependentResource<PersistentVolumeClaim, Trustify> resource, Trustify cr, Context<Trustify> context) {
        final var clusterService = context.managedDependentResourceContext().getMandatory(Constants.CLUSTER_SERVICE, ClusterService.class);

        Cluster cluster = clusterService.getCluster();
        if (cluster instanceof OpenshiftCluster) {
            return cluster.getAutoGeneratedServerTlsSecret(cr).isPresent();
        }
        return true;
    }

}
