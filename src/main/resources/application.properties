quarkus.container-image.registry=ghcr.io
quarkus.container-image.tag=v${quarkus.application.version}

# set to true to automatically apply CRDs to the cluster when they get regenerated
quarkus.operator-sdk.crd.apply=true

# Operator config
related.image.api=ghcr.io/trustification/trustd:0.1.0-alpha.9
related.image.db=quay.io/enterprisedb/postgresql:16-ubi9
related.image.pull-policy=Always

# https://quarkus.io/guides/deploying-to-kubernetes#environment-variables-from-keyvalue-pairs
quarkus.kubernetes.env.vars.related-image-trustify-api=${related.image.api}
quarkus.kubernetes.env.vars.related-image-db=${related.image.db}
quarkus.kubernetes.env.vars.related-image-importer=${related.image.importer}
quarkus.openshift.env.vars.related-image-trustify-api=${related.image.api}
quarkus.openshift.env.vars.related-image-db=${related.image.db}
quarkus.openshift.env.vars.related-image-importer=${related.image.importer}

quarkus.kubernetes.resources.requests.memory=64Mi
quarkus.kubernetes.resources.requests.cpu=50m
quarkus.kubernetes.resources.limits.memory=256Mi
quarkus.kubernetes.resources.limits.cpu=250m

quarkus.kubernetes.rbac.roles.trustify.policy-rules.0.api-groups=
quarkus.kubernetes.rbac.roles.trustify.policy-rules.0.resources=*
quarkus.kubernetes.rbac.roles.trustify.policy-rules.0.verbs=*

quarkus.kubernetes.rbac.roles.trustify.policy-rules.1.api-groups=security.openshift.io
quarkus.kubernetes.rbac.roles.trustify.policy-rules.1.resources=securitycontextconstraints
quarkus.kubernetes.rbac.roles.trustify.policy-rules.1.verbs=use
quarkus.kubernetes.rbac.roles.trustify.policy-rules.1.resource-names=anyuid

# Increase test hang time since the operator takes time to initiate all deployments
quarkus.test.hang-detection-timeout=30M