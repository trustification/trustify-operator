name: Multiple Architecture Image Build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "release/*"
    tags:
      - "v*"

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  operator-build:
    uses: trustification/release-tools/.github/workflows/build-push-images.yaml@main
    with:
      registry: "ghcr.io"
      image_name: "${{ github.repository_owner }}/trustify-operator"
      containerfile: "./Dockerfile"
      architectures: '[ "amd64", "arm64" ]'
    secrets:
      registry_username: ${{ github.actor }}
      registry_password: ${{ secrets.GITHUB_TOKEN }}

  keycloak-build:
    uses: trustification/release-tools/.github/workflows/build-push-images.yaml@main
    with:
      registry: "ghcr.io"
      image_name: "${{ github.repository_owner }}/trustify-keycloak"
      containerfile: "./kc.Dockerfile"
      architectures: '[ "amd64", "arm64" ]'
      extra-args: "--ulimit nofile=4096:4096"
    secrets:
      registry_username: ${{ github.actor }}
      registry_password: ${{ secrets.GITHUB_TOKEN }}

  bundle-build:
    runs-on: ubuntu-latest
    needs: operator-build
    steps:
      - name: Extract env vars for main
        shell: bash
        run: |
          branch=main
          bundle_version=99.0.0-$branch.$(date +"%Y%m%d.%H%M%S")
          quarkus_opts="-Dquarkus.container-image.image=ghcr.io/${{ github.repository_owner }}/trustify-operator:latest -Dquarkus.application.version=$bundle_version"
          
          echo "channels=$branch" >> $GITHUB_ENV
          echo "bundle_image_tag=v$bundle_version" >> $GITHUB_ENV
          echo "quarkus_opts=$quarkus_opts" >> $GITHUB_ENV
        if: ${{ github.ref == 'refs/heads/main' }}
      - name: Extract env vars from tag
        shell: bash
        run: |
          tag=$(echo ${GITHUB_REF#refs/tags/})
          # We expect the pom.xml has the appropiate version values so we do not set '-Dquarkus.application.version=$bundle_version' here
          quarkus_opts="-Dquarkus.container-image.image=ghcr.io/${{ github.repository_owner }}/trustify-operator:$tag"
          
          echo "channels=alpha" >> $GITHUB_ENV
          echo "bundle_image_tag=$tag" >> $GITHUB_ENV          
          echo "quarkus_opts=$quarkus_opts" >> $GITHUB_ENV
        if: contains(github.ref, 'tags')
      - name: Extract env vars from all other branches
        shell: bash
        run: |
          branch=$(echo ${GITHUB_REF#refs/heads/})
          branch="${branch#release/}"
          bundle_version=99.0.0-$branch.$(date +"%Y%m%d.%H%M%S")
          quarkus_opts="-Dquarkus.container-image.image=ghcr.io/${{ github.repository_owner }}/trustify-operator:$branch -Dquarkus.application.version=$bundle_version"
          
          echo "channels=$branch" >> $GITHUB_ENV
          echo "bundle_image_tag=v$bundle_version" >> $GITHUB_ENV
          echo "quarkus_opts=$quarkus_opts" >> $GITHUB_ENV
        if: contains(github.ref, 'refs/heads/main') == false && contains(github.ref, 'tags') == false

      - name: Build bundle
        uses: trustification/release-tools/.github/actions/build-push@main
        with:
          containerfile: "./bundle.Dockerfile"
          architectures: "amd64, arm64"
          image_registry: ghcr.io
          image_namespace: ${{ github.repository_owner }}
          image_name: trustify-operator-bundle
          tags: ${{ env.bundle_image_tag }}
          build-args: |
            CHANNELS=${{ env.channels }}
            QUARKUS_OPTS=${{ env.quarkus_opts }}
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Bundle Index
        uses: trustification/release-tools/.github/actions/build-push@main
        with:
          containerfile: "./index.Dockerfile"
          architectures: "amd64, arm64"
          pre_build_cmd: |
            catalog_img=ghcr.io/${{ github.repository_owner }}/trustify-operator-catalog:latest
            bundle_imgs=ghcr.io/${{ github.repository_owner }}/trustify-operator-bundle:${{ env.bundle_image_tag }}
            
            if podman manifest inspect $catalog_img >/dev/null 2>&1; then
              CONTAINER_RUNTIME=podman \
              CATALOG_IMG=$catalog_img \
              BUNDLE_IMGS=$bundle_imgs \
              CATALOG_BASE_IMG=$catalog_img \
              make catalog-index
            else
              CONTAINER_RUNTIME=podman \
              CATALOG_IMG=$catalog_img \
              BUNDLE_IMGS=$bundle_imgs \
              make catalog-index
            fi
          image_registry: ghcr.io
          image_namespace: ${{ github.repository_owner }}
          image_name: trustify-operator-catalog
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          tags: 'latest'
