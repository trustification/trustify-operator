name: CI

on:
  push:
    branches:
      - main
      - "release-*"
  pull_request:
    branches:
      - main
      - "release-*"

concurrency:
  group: trustify-operator-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rancher:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kubernetes_version:
          [
            latest,
            v1.23.17-k3s1,
            v1.24.17-k3s1,
            v1.25.16-k3s4,
            v1.26.15-k3s1,
            v1.27.15-k3s2,
            v1.28.11-k3s2,
          ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"
      - name: Test
        env:
          KUBERNETES_VERSION: ${{ matrix.kubernetes_version }}
        run: mvn verify

  crc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        preset: [ "okd" ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"
      - name: Install required virtualization software
        run: |
          sudo apt-get update
          sudo apt install qemu-kvm libvirt-daemon libvirt-daemon-system
          sudo usermod -a -G libvirt $USER
      - name: Remove unwanted stuff to free up disk image
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo swapoff -a
          sudo rm -f /mnt/swapfile
          df -h
      - name: Download crc
        run: |
          wget https://developers.redhat.com/content-gateway/file/pub/openshift-v4/clients/crc/2.40.0/crc-linux-amd64.tar.xz
          mkdir -p bin/ && tar -xJf crc-linux-amd64.tar.xz --strip-components=1 -C bin/
          sudo mv ./bin/crc /usr/local/bin/crc && rm -r bin/
      - name: Set the crc config
        run: |
          crc config set consent-telemetry no
          crc config set network-mode user
          crc config set preset ${{ matrix.preset }}
      - name: Setup the crc
        run: sudo -su $USER crc setup
      - name: Start the crc
        run: |
          sudo -su $USER crc start
      - name: Test
        run: |
          export HOST_KUBERNETES_CONFIG_FILE=${HOME}/.kube/config
          echo "Using ${HOST_KUBERNETES_CONFIG_FILE} as host k8s"
          mvn verify

  build-operator-bundle:
    runs-on: ubuntu-latest
    env:
      IMG: ttl.sh/trustify-operator-${{ github.sha }}:2h
      BUNDLE_IMG: ttl.sh/trustify-operator-bundle-${{ github.sha }}:2h
    steps:
      - uses: actions/checkout@v4
      - name: Create operator
        run: DOCKERFILE=Dockerfile.jvm make docker-build docker-push
      - name: Create operator-bundle
        run: make bundle-build bundle-push
  run-ci:
    needs: build-operator-bundle
    uses: trustification/trustify-ci/.github/workflows/global-ci.yml@main
    with:
      operator_bundle: ttl.sh/trustify-operator-bundle-${{ github.sha }}:2h